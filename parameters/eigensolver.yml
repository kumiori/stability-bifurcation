inertia:
    # MUMPS
    ksp_type: "preonly"
    pc_type: "cholesky"
    pc_factor_mat_solver_type: "mumps"
    mat_mumps_icntl_24: 1
    mat_mumps_icntl_13: 1
    # eps_monitor:
    # snes_type: ksponly
    # ksp_type: preonly
    # pc_type: lu
    # pc_factor_mat_solver_type: mumps
    # ksp_atol: 1.0e-08
    # ksp_rtol: 1.0e-08
    # ksp_stol: 1.0e-08
    # GMRES + HYPRE (https://mooseframework.inl.gov/application_development/hypre.html)
    # ksp_type: gmres
    # pc_type: hypre
    # pc_hypre_type: boomeramg
    # pc_hypre_boomeramg_cycle_type: V
    # pc_hypre_boomeramg_relax_type_all: backward-SOR/Jacobi # SOR/Jacobi
    # pc_hypre_boomeramg_measure_type: global # local
    # pc_hypre_boomeramg_coarsen_type: Falgout
    # pc_hypre_boomeramg_strong_threshold: 0.3 # 3D: 0.7 (> 0.5)
    # pc_hypre_boomeramg_agg_nl: 1
    # pc_hypre_boomeramg_print_statistics: 0 
    # GMRES + GAMG (can be tuned to be quicker)
    # ksp_type: gmres
    # pc_type: gamg
    # pc_gamg_type: agg
    # pc_gamg_repartition: 1
    # pc_gamg_reuse_interpolation: 1
    # pc_gamg_asm_use_agg: 1
    # pc_gamg_agg_nsmooths: 1
    # pc_gamg_square_graph: 1
    # pc_gamg_threshold: 0.01
    # pc_gamg_sym_graph: 1
    # mg_levels_esteig_ksp_type: cg
    # mg_levels_ksp_type: chebyshev
    # mg_levels_pc_type: jacobi
    # mg_levels_ksp_chebyshev_esteig_steps: 50
# Elasticity plasticity solver parameters

eigen:
    eps_type: "krylovschur"
    eig_rtol: 1e-8
    # eps_monitor: 1
    # E.setType(SLEPc.EPS.Type.KRYLOVSCHUR)
    # E.setProblemType(SLEPc.EPS.ProblemType.HEP)
    # E.setWhichEigenpairs(E.Which.TARGET_REAL)
    # E.setTarget(-.1) 
    # st = E.getST()
    # st.setType('sinvert')
    # st.setShift(-1.e-3)